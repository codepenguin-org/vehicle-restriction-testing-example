# MIT License
#
# Copyright (c) 2021 codepenguin.org
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

openapi: 3.0.3
info:
  title: vehicle-restriction-testing-example
  description: Spring Boot application as example to learn how to apply unit testing with JUnit and coverage with JaCoCo.
  version: 0.0.1
  contact:
    email: codepenguin_org@protonmail.ch
  license:
    name: MIT
    url: "https://github.com/codepenguin-org/vehicle-restriction-testing-example/blob/main/LICENSE"
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/codepenguin-org/vehicle-restriction-testing-example/0.0.1
components:
  schemas:
    VehicleRestrictionRequest:
      type: object
      required:
        - plate
        - city
      properties:
        plate:
          type: string
          description: Vehicle's license plate.
          example: ABC123
        city:
          type: string
          description: City ​​where the vehicle wishes to travel.
          enum:
            - BOGOTA
            - CALI
            - MEDELLIN
          example: BOGOTA
        datetime:
          type: string
          format: date-time
          description: Date and time when the vehicle wishes to transit. If this value is not setted, it'll use the current date and time.
    VehicleRestrictionResponse:
      type: object
      required:
        - plate
        - city
        - datetime
      properties:
        plate:
          type: string
          description: Vehicle's license plate.
          example: ABC123
        city:
          type: string
          description: City ​​where the vehicle wishes to travel.
          enum:
            - BOGOTA
            - CALI
            - MEDELLIN
          example: BOGOTA
        datetime:
          type: string
          format: date-time
          description: Date and time when the vehicle wishes to transit. If this value is not setted, it'll use the current date and time.
        canDrive:
          type: boolean
          description: Indicates if the vehicle can travel.
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: the error message
          example: Must set the vehicle's plate.
paths:
  /:
    post:
      summary: Validates if a vehicle can travel according to its license plate, city and date/time indicated.
      description: Validates if a vehicle can travel according to its license plate, city and date/time indicated.
      operationId: validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VehicleRestrictionRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleRestrictionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"                
